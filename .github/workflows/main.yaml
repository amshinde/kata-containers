on: 
  push: 
    tags:
     - '*'

jobs:
  get-artifact-list:
    runs-on: ubuntu-latest
    steps:
      - name: get the list
        run: |
         git clone https://github.com/amshinde/kata-packaging packaging
         pushd packaging
         tag=`echo $GITHUB_REF | cut -d/ -f3-`
         git checkout $tag
         popd
         ./packaging/artifact-list.sh > artifact-list.txt
      - name: save-artifact-list
        uses: actions/upload-artifact@master
        with:
          name: artifact-list
          path: artifact-list.txt

  build-kernel:
    runs-on: ubuntu-16.04
    needs: get-artifact-list
    env:
      buildstr: "install_kernel"
    steps:
      - uses: actions/checkout@v1
      - name: get-artifact-list
        uses: actions/download-artifact@master
        with:
          name: artifact-list
      - run: |
         sudo apt-get update && sudo apt install -y flex bison libelf-dev bc iptables
      - name: build-kernel
        run: |
         if grep -q $buildstr ./artifact-list/artifact-list.txt; then
           $GITHUB_WORKSPACE/.github/workflows/generate-artifact-tarball.sh $buildstr
           echo ::set-env name=artifact-built::true
         else
           echo ::set-env name=artifact-built::false
         fi
      - name: store-artifacts
        if: env.artifact-built == 'true'
        uses: actions/upload-artifact@master
        with:
          name: kata-artifacts
          path: kata-static-kernel.tar.gz

  build-experimental-kernel:
    runs-on: ubuntu-16.04
    needs: get-artifact-list
    env:
      buildstr: "install_experimental_kernel"
    steps:
      - uses: actions/checkout@v1
      - name: get-artifact-list
        uses: actions/download-artifact@master
        with:
          name: artifact-list
      - run: |
         sudo apt-get update && sudo apt install -y flex bison libelf-dev bc iptables
      - name: build-experimental-kernel
        run: |
         if grep -q $buildstr ./artifact-list/artifact-list.txt; then
           $GITHUB_WORKSPACE/.github/workflows/generate-artifact-tarball.sh $buildstr
           echo ::set-env name=artifact-built::true
         else
           echo ::set-env name=artifact-built::false
         fi
      - name: store-artifacts
        if: env.artifact-built == 'true'
        uses: actions/upload-artifact@master
        with:
          name: kata-artifacts
          path: kata-static-experimental-kernel.tar.gz

  build-qemu:
    runs-on: ubuntu-16.04
    needs: get-artifact-list
    env:
      buildstr: "install_qemu"
    steps:
      - uses: actions/checkout@v1
      - name: get-artifact-list
        uses: actions/download-artifact@master
        with:
          name: artifact-list
      - name: build-qemu
        run: |
         if grep -q $buildstr ./artifact-list/artifact-list.txt; then
           $GITHUB_WORKSPACE/.github/workflows/generate-artifact-tarball.sh $buildstr
           echo ::set-env name=artifact-built::true
         else
           echo ::set-env name=artifact-built::false
         fi
      - name: store-artifacts
        if: env.artifact-built == 'true'
        uses: actions/upload-artifact@master
        with:
          name: kata-artifacts
          path: kata-static-qemu.tar.gz

  # Job for building the QEMU binaries with virtiofs support
  build-qemu-virtiofsd:
    runs-on: ubuntu-16.04
    needs: get-artifact-list
    env:
      buildstr: "install_qemu_virtiofsd"
    steps:
      - uses: actions/checkout@v1
      - name: get-artifact-list
        uses: actions/download-artifact@master
        with:
          name: artifact-list
      - name: build-qemu-virtiofsd
        run: |
         if grep -q $buildstr ./artifact-list/artifact-list.txt; then
           $GITHUB_WORKSPACE/.github/workflows/generate-artifact-tarball.sh $buildstr
           echo ::set-env name=artifact-built::true
         else
           echo ::set-env name=artifact-built::false
         fi
      - name: store-artifacts
        if: env.artifact-built == 'true'
        uses: actions/upload-artifact@master
        with:
          name: kata-artifacts
          path: kata-static-qemu-virtiofsd.tar.gz

  # Job for building the image
  build-image:
    runs-on: ubuntu-16.04
    needs: get-artifact-list
    env:
      buildstr: "install_image"
    steps:
      - uses: actions/checkout@v1
      - name: get-artifact-list
        uses: actions/download-artifact@master
        with:
          name: artifact-list
      - name: build-image
        run: |
         if grep -q $buildstr ./artifact-list/artifact-list.txt; then
           $GITHUB_WORKSPACE/.github/workflows/generate-artifact-tarball.sh $buildstr
           echo ::set-env name=artifact-built::true
         else
           echo ::set-env name=artifact-built::false
         fi
      - name: store-artifacts
        if: env.artifact-built == 'true'
        uses: actions/upload-artifact@master
        with:
          name: kata-artifacts
          path: kata-static-image.tar.gz

  # Job for building firecracker hypervisor
  build-firecracker:
    runs-on: ubuntu-16.04
    needs: get-artifact-list
    env:
      buildstr: "install_firecracker"
    steps:
      - uses: actions/checkout@v1
      - name: get-artifact-list
        uses: actions/download-artifact@master
        with:
          name: artifact-list
      - name: build-firecracker
        run: |
         if grep -q $buildstr ./artifact-list/artifact-list.txt; then
           $GITHUB_WORKSPACE/.github/workflows/generate-artifact-tarball.sh $buildstr
           echo ::set-env name=artifact-built::true
         else
           echo ::set-env name=artifact-built::false
         fi
      - name: store-artifacts
        if: env.artifact-built == 'true'
        uses: actions/upload-artifact@master
        with:
          name: kata-artifacts
          path: kata-static-firecracker.tar.gz

  # Job for building cloud-hypervisor
  build-clh:
    runs-on: ubuntu-16.04
    needs: get-artifact-list
    env:
      buildstr: "install_clh"
    steps:
      - uses: actions/checkout@v1
      - name: get-artifact-list
        uses: actions/download-artifact@master
        with:
          name: artifact-list
      - name: build-clh
        run: |
         if grep -q $buildstr ./artifact-list/artifact-list.txt; then
           nohup $GITHUB_WORKSPACE/.github/workflows/generate-artifact-tarball.sh $buildstr
           echo ::set-env name=artifact-built::true
         else
           echo ::set-env name=artifact-built::false
         fi
      - name: store-artifacts
        if: env.artifact-built == 'true'
        uses: actions/upload-artifact@master
        with:
          name: kata-artifacts
          path: kata-static-clh.tar.gz

  # Job for building kata components
  build-kata-components:
    runs-on: ubuntu-16.04
    needs: get-artifact-list
    env:
      buildstr: "install_kata_components"
    steps:
      - uses: actions/checkout@v1
      - name: get-artifact-list
        uses: actions/download-artifact@master
        with:
          name: artifact-list
      - name: build-kata-components
        run: |
         if grep -q $buildstr ./artifact-list/artifact-list.txt; then
           $GITHUB_WORKSPACE/.github/workflows/generate-artifact-tarball.sh $buildstr
           echo ::set-env name=artifact-built::true
         else
           echo ::set-env name=artifact-built::false
         fi
      - name: store-artifacts
        if: env.artifact-built == 'true'
        uses: actions/upload-artifact@master
        with:
          name: kata-artifacts
          path: kata-static-kata-components.tar.gz

  gather-artifacts:
    runs-on: ubuntu-16.04
    needs: [build-kernel, build-qemu, build-qemu-virtiofsd, build-image, build-firecracker, build-kata-components]
    steps:
      - uses: actions/checkout@v1
      - name: get-artifacts
        uses: actions/download-artifact@master
        with:
          name: kata-artifacts
      - name: colate-artifacts
        run: |
          $GITHUB_WORKSPACE/.github/workflows/gather-artifacts.sh
      - name: store-artifacts
        uses: actions/upload-artifact@master
        with:
          name: release-candidate
          path: kata-static.tar.xz

  kata-deploy:
    needs: gather-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: get-artifacts
        uses: actions/download-artifact@master
        with:
          name: release-candidate
      - name: build-and-push-kata-deploy-ci
        run: |
          tag=`echo $GITHUB_REF | cut -d/ -f3-`
          git clone https://github.com/kata-containers/packaging
          pushd packaging
          git checkout $tag
          pkg_sha=$(git rev-parse HEAD)
          popd
          mv release-candidate/kata-static.tar.xz ./packaging/kata-deploy/kata-static.tar.xz
          docker build --build-arg KATA_ARTIFACTS=kata-static.tar.xz -t katadocker/kata-deploy-ci:$pkg_sha ./packaging/kata-deploy
